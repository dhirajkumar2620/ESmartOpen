@model App_Layer.MedicalInformationDetails
@{
    Layout = null;
}

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "frmMedicalInformationDetails" }))
{
    @Html.HiddenFor(m => m.Id, new { @id = "hdnId" });
    <div class="card-body">
        <div>
            <p>Have you Ever suffered from any of these?</p>
            <ul class="list-inline">
                <li class="list-inline-item">

                    @Html.CheckBoxFor(model => model.Diabetes, new { @class = "checkbox-template" }); &nbsp;Diabetes
                </li>
                <li class="list-inline-item">
                    @Html.CheckBoxFor(model => model.Asthma, new { @class = "checkbox-template" }); &nbsp;Asthma
                </li>
                <li class="list-inline-item">
                    @Html.CheckBoxFor(model => model.ThyroidProblem, new { @class = "checkbox-template" }); &nbsp;Thyroid Problem
                </li>
                <li class="list-inline-item">
                    @Html.CheckBoxFor(model => model.Jaundice, new { @class = "checkbox-template" }); &nbsp;Jaundice
                </li>
                <li class="list-inline-item">
                    @Html.CheckBoxFor(model => model.Migraine, new { @class = "checkbox-template" });&nbsp;Migraine
                </li>
                <li class="list-inline-item">
                    @Html.CheckBoxFor(model => model.AIDS, new { @class = "checkbox-template" }); &nbsp;AIDS
                </li>
                <li class="list-inline-item">
                    @Html.CheckBoxFor(model => model.HeartProblem, new { @class = "checkbox-template" }); &nbsp;Heart Problem
                </li>
                <li class="list-inline-item">
                    @Html.CheckBoxFor(model => model.BloodPressure, new { @class = "checkbox-template" }); &nbsp;Blood Pressure High/Low
                </li>
                <li class="list-inline-item">
                    @Html.CheckBoxFor(model => model.TB, new { @class = "checkbox-template" }); &nbsp;TB
                </li>
                <li class="list-inline-item">
                    @Html.CheckBoxFor(model => model.Cancer, new { @class = "checkbox-template" }); &nbsp;Cancer
                </li>
            </ul>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label class="form-control-label">
                        Others
                    </label>
                    @Html.TextBoxFor(m => m.Other, new { @id = "txtOther", @class = "form-control", required = "required", @placeholder = "Other" })
                    @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <p>Allergies</p>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Allegies, new { @id = "txtAllegies", @class = "form-control", required = "required", @placeholder = "Allergies" })
                    @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <br />
        <div class="row">
            <div class="col-md-12 text-right">
                <button type="button" onclick="SubmitMedicalInformationDetails()" class="btn btn_1 btn-primary" id="tostr-save1">Save</button>
            </div>
        </div>
    </div>

}
<script>
    function SubmitMedicalInformationDetails() {

            var form = $('#frmMedicalInformationDetails')[0];

            var fromData = new FormData(form);
            var urllink = '@Url.Content("~/TabDetails/ManageMedicalInfoDetails")'

            $.ajax({
                type: "post",
                url: urllink,
                data: fromData,
                processData: false,
                contentType: false,
                success: function (data) {
                    alert("Details Updated Sucessfully.");
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(errorThrown);
                }
            })

        }
</script>

